# Generated by re2py 4.1
def get_math_expr_parts(text: str) -> tuple[list[str], list[str]]:
    # mark an end with null terminator
    yyinput = text.encode("ascii") + b"\0"
    yycursor = 0  # index

    # list of saved indices

    yytm2 = []
    yytm3 = []
    yytm4 = []


    yystate = 0
    while True:
        match yystate:
            case 0:
                yych = yyinput[yycursor]
                yycursor += 1
                if yych <= 0x2F:
                    yystate = 1
                    continue
                if yych <= 0x39:
                    yystate = 3
                    continue
                yystate = 1
                continue
            case 1:
                yystate = 2
                continue
            case 2:
                return [], []
            case 3:
                yymarker = yycursor
                yych = yyinput[yycursor]
                if yych <= 0x2C:
                    if yych <= 0x00:
                        
                        
                        
                        yyt1 = yycursor
                        yycursor += 1
                        yystate = 4
                        continue
                    if yych == 0x2B:
                        yytm2.append(yycursor)
                        yyt1 = yycursor
                        yycursor += 1
                        yystate = 5
                        continue
                    yystate = 2
                    continue
                else:
                    if yych <= 0x2D:
                        yytm2.append(yycursor)
                        yyt1 = yycursor
                        yycursor += 1
                        yystate = 5
                        continue
                    if yych <= 0x2F:
                        yystate = 2
                        continue
                    if yych <= 0x39:
                        yycursor += 1
                        yystate = 7
                        continue
                    yystate = 2
                    continue
            case 4:
                num_end = yyt1
                pair_start = yytm2
                pair_center = yytm3
                pair_end = yytm4
                numbers = [text[:num_end]]
                ops = []
                for s, c, e in zip(pair_start, pair_center, pair_end):
                    ops.append(text[s:c])
                    numbers.append(text[c:e])
                return numbers, ops
            case 5:
                yych = yyinput[yycursor]
                if yych <= 0x2F:
                    yystate = 6
                    continue
                if yych <= 0x39:
                    yytm3.append(yycursor)
                    yycursor += 1
                    yystate = 8
                    continue
                yystate = 6
                continue
            case 6:
                yycursor = yymarker
                yystate = 2
                continue
            case 7:
                yych = yyinput[yycursor]
                if yych <= 0x2C:
                    if yych <= 0x00:
                        
                        
                        
                        yyt1 = yycursor
                        yycursor += 1
                        yystate = 4
                        continue
                    if yych == 0x2B:
                        yytm2.append(yycursor)
                        yyt1 = yycursor
                        yycursor += 1
                        yystate = 5
                        continue
                    yystate = 6
                    continue
                else:
                    if yych <= 0x2D:
                        yytm2.append(yycursor)
                        yyt1 = yycursor
                        yycursor += 1
                        yystate = 5
                        continue
                    if yych <= 0x2F:
                        yystate = 6
                        continue
                    if yych <= 0x39:
                        yycursor += 1
                        yystate = 7
                        continue
                    yystate = 6
                    continue
            case 8:
                yych = yyinput[yycursor]
                if yych <= 0x2C:
                    if yych <= 0x00:
                        yytm4.append(yycursor)
                        yycursor += 1
                        yystate = 4
                        continue
                    if yych == 0x2B:
                        yytm4.append(yycursor)
                        yytm2.append(yycursor)
                        yycursor += 1
                        yystate = 5
                        continue
                    yystate = 6
                    continue
                else:
                    if yych <= 0x2D:
                        yytm4.append(yycursor)
                        yytm2.append(yycursor)
                        yycursor += 1
                        yystate = 5
                        continue
                    if yych <= 0x2F:
                        yystate = 6
                        continue
                    if yych <= 0x39:
                        yycursor += 1
                        yystate = 8
                        continue
                    yystate = 6
                    continue
            case _:
                raise "internal lexer error"

